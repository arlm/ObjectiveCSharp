Basic Installation
==================

*********************************************************************
*                                                                   *
*                            NOTICE                                 *
*                                                                   *
*	Unless you are developing the class libraries, you should       *
*	not need to do any build steps in this directory.               *
*                                                                   *
*********************************************************************

If you only want to build a snapshot or a fresh git checkout of the
sources, you should go into the `mono' sibling directory and issue the
make command, like this:

	  ...

The compilation is bundled with the build due to dependencies on the
class libraries on the runtime.

Build Features for Developers of Mono.
======================================

These instructions apply to both Linux and Windows. To build this
package, you must already have a C# compiler installed.  This means
that to build on Linux, you need to get a distribution of the MCS
binaries; these are called monocharges. They can be found at
www.go-mono.com/daily. On Windows, you can just use the
Microsoft compiler. You also need GNU make to build the software (on
Windows, you will need for example the Cygwin environment setup).

You can customize your MCS configuration by using:

    ./configure [--prefix=PREFIX] [--profile=PROFILE] 

If you do not run the above, the defaults are /usr/local for the
prefix, and `default' for the profile.

To build the compiler and class libraries, run:

    make

The libraries will be placed in the directory class/lib/ and the mcs
compiler executable in mcs/.

To install them, run the following:

    make install

If you get "corlib out of sync" errors, try

    make PROFILE="atomic"

A better alternative would be to fire off a 'make' from a sibling or
parent 'mono/' tree.

Troubleshooting
===============

We try to maintain the git tree such that it is bootstrapable from the
latest released version of mono and mcs.  Occasionally, something in the
compiler or runtime changes enough that an existing installation cannot
complete a bootstrap from cvs.  In this case, go to
http://go-mono.com/daily and download a monocharge or monolite tarball.
Unpack and copy the .dlls to $prefix/lib and .exes to $prefix/bin/.
Then you should be able to complete the build normally (i.e. using make
bootstrap).

	wget http://go-mono.com/daily/monolite-20040505.tar.gz
	tar -zxvf monolite-20040505.tar.gz
	cd monolite-20040505
	env prefix=/usr/local sh recharge.sh


Configuration
=============

If you want to change the configuration options for the build process,
place your configuration options in build/config.make

A list of variables that control the build are listed in the file
build/config-default.make.
